spring:
  application:
    name: "payments-auth-service-${ENV}"
  jpa:
    show-sql: false
  liquibase:
    change-log: classpath:db/changelog/changelog-cloud.xml
  datasource:
    driver-class-name: org.postgresql.Driver
    url: "jdbc:postgresql://${POSTGRES_HOST}/${POSTGRES_DB}?socketFactory=com.google.cloud.sql.postgres.SocketFactory&cloudSqlInstance=${GCP_PROJECT_ID}:${GCP_REGION}:${GCP_SQL_INSTANCE}&useSSL=false&user=${POSTGRES_USER}&password=${POSTGRES_PASSWORD}"
    username: "${POSTGRES_USER}"
    password: "${POSTGRES_PASSWORD}"
    hikari:
      maximum-pool-size: 20
      leak-detection-threshold: 10000
  cloud:
    gcp:
      core:
        enabled: true
      secretmanager:
        enabled: true
      sql:
        enabled: true
        database-name: "${POSTGRES_DB}"
        instance-connection-name: "${GCP_PROJECT_ID}:${GCP_REGION}:${GCP_SQL_INSTANCE}"
      pubsub:
        enabled: true
        emulator-host: "#{null}"
        project-id: "${GCP_PROJECT_ID:aeo-cust-payment-np-b2ac}"
  autoconfigure:
    exclude:
     - com.google.cloud.spring.autoconfigure.pubsub.GcpPubSubEmulatorAutoConfiguration
     - org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration
  config:
    import:
     - sm://
---
management:
  newrelic:
    metrics:
      export:
        enabled: true
        meter-name-event-type-enabled: true
        client-provider-type: insights-agent
---
input:
  apiKey: "${API_KEY:}"
  paymentsAuthURL: "${PAYMENT_AUTH_URL:https://checkout-test.adyen.com/checkout/v64}"
  paymentsAuthV2URL: "${PAYMENT_AUTH_V2_URL:https://checkout-test.adyen.com/v71}"
  useMock: "${USE_MOCK:false}"
  sleepTimeoutMillis: "${SLEEP_TIMEOUT:1000}"
  allowedReauthCapturePayments: "${ALLOWED_REAUTH_CAPTURE_PAYMENTS:paypal}"
  allowedPaymentsForAuthTokenValidation: "${ALLOWED_PAYMENTS_FOR_AUTH_TOKEN_VALIDATION:}"
  dbAllowedResultCodes: "${DB_ALLOWED_RESULT_CODES:AUTHORIZED,PENDING,REDIRECT_SHOPPER,VOUCHER,SETTLED}"
  emailsToBypassAuthCall: "${EMAILS_TO_BYPASS_AUTH_CALL:aeprodcc@ae.com,aeprodcc_visa@g3v8l0qg.mailosaur.net,aeprodcc_mastercard@g3v8l0qg.mailosaur.net,aeprodcc_discover@g3v8l0qg.mailosaur.net,aeprodcc_amex@g3v8l0qg.mailosaur.net}"
  afterpayServiceURL: "${AFTERPAY_SERVICE_URL:https://api.us-sandbox.afterpay.com/v2}"
  afterpayTokenEndPoint: "${AFTERPAY_TOKEN_END_POINT:/checkouts}"
  afterpayAuthEndPoint: "${AFTERPAY_AUTH_END_POINT:/payments/auth}"
  afterpayReverseAuthEndPoint: "${AFTERPAY_REVERSE_AUTH_END_POINT:/payments/token:}"
  afterpayReverseAuthURI: "${AFTERPAY_REVERSE_AUTH_URI:/reversal}"
  afterpayConnectTimeoutMillis: "${AFTERPAY_CONNECT_TIMEOUT:15000}"
  afterpayReadTimeoutMillis: "${AFTERPAY_READ_TIMEOUT:15000}"
  afterpaySiteIdAuthMap:
    AEO_US: "${US_AFTERPAY_AUTH}"
    AEO_CA: "${CA_AFTERPAY_AUTH}"
  braintreeServiceURL: "${BRAINTREE_SERVICE_URL}"
  braintreeAuth: "${BRAINTREE_AUTH}"
  braintreeVersion: "${BRAINTREE_VERSION}"
  braintreeConnectTimeoutMillis: "${BRAINTREE_CONNECT_TIMEOUT_MILLIS:30000}"
  braintreeReadTimeoutMillis: "${BRAINTREE_READ_TIMEOUT_MILLIS:30000}"
  braintreeSiteIdMerchantIdMap:
    AEO_US: "${US_BT_MERCHANT_ID:americaneagle}"
    AEO_CA: "${CA_BT_MERCHANT_ID:americaneagleCA}"
    AEO_MX: "${MX_BT_MERCHANT_ID:americaneagleMX}"
  sendPaypalPayeeEmail: "${IS_SEND_PAYPAL_PAYEE_EMAIL:true}"
  paypalPayeeEmailMap:
    AEO_US: "${US_PAYEE_EMAIL_ID:american_eagle_biz@gmail.com}"
    AEO_CA: "${CA_PAYEE_EMAIL_ID:american_eagle_canada_biz@gmail.com}"
  synchronyCreditCards: "${SYNCHRONY_CREDIT_CARDS:synchrony_plcc,synchrony_cbcc,synchrony_cbcc_applepay,synchrony_plcc_applepay}"
rsakey:
  public: "${RSA_PUBLIC_KEY}"
basicAuthKeys:
 - "${ATG_AUTH_KEY}"
 - "${INTERNAL_AUTH_KEY}"
---
aeo-gcp-pubsub:
  subscribers:
   -
    auto-configure: true
    auto-start: true
    bean-name: intlPaymentAuthSubscriber
    message-receiver-name: intlPaymentAuthReceiver
    project-id: "${GCP_PROJECT_ID:aeo-cust-payment-np-b2ac}"
    subscription-name: "${PAYMENT_INTL_AUTH_SUBSCRIPTION:payments-auth-status-update-sub-sit}"
    topic-name: "${PAYMENT_INTL_AUTH_TOPIC_NAME:payments-auth-status-update-topic-sit}"
    thread-count: 10
---
spring.boot.admin.client:
  enabled: "${SPRING_ADMIN_ENABLED:false}"
  auto-deregistration: true
  url: "${SPRING_ADMIN_URL}"
  instance:
    service-host-type: ip
    metadata:
      swagger: "${SWAGGER_URL:unknown}"
      tags:
        env: "${ENV}"
        pod: "${HOSTNAME}"
